{"version":3,"sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotContainer","isMeasured","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","moveValue","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","series","xAxis","get","yAxis","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","position","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","dispose","local","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","cursor","getPrivate","snapToSeries","isHidden","isHiding","startIndex","endIndex","i","dataItem","dataItems","tooltipDataItem","point","distance","Math","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","setPrivate","getIndex","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","value","newIndex","isDisposed","axisParent","removeValue","gridContainer","gridParent","topGridParent","left","right","_axis","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","length","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","w","h","plotT","_display","plotB","tooltips","sum","minDistance","movePoint","_movePoint","maxTooltipDistance","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","sort","a","b","count","reverse","centerY","top","bottom","min","_fy","max","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","strokeDasharray","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","extraMin","extraMax","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","_downPoints","selection","rootPoint","_inPlot","_getPosition","charAt","userPositionX","userPositionY","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","AxisLabel","AxisLabelRadial","ticks","template","grid","axisFills","labels","tick","make","labelsContainer","label","axisLength","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","downStart","downEnd","extra","_getPan","_point1","_point2","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","AxisRenderer","AxisTick","_beforeChanged","isPrivateDirty","Grid","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","len","inited","_createGraphics","_ph","_pw","baseAxis","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","_toggleColumn","j","_updateGraphics","_skipped","graphics","_makeGraphics","legendDataItem","markerRectangle","stroke","axisRanges","axisRange","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","getDataItemPositionX","getDataItemPositionY","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","_dataItems","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","disposeDataItem","list","promises","hideDataItem","Promise","all","bullets","bullet","showDataItem","column","setting","_getTooltipTarget","strokes","fills","_fillGenerator","y0","p","x0","y1","x1","mainContainer","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataContext","_valueFields","field","_endIndex","_clearGraphics","_startSegment","clear","segmentIndex","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","nextItem","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","_points","_firstPoint","segment","context","_processAxisRange","_dataItem","marker","disabledColor","bulletFunction","LineSeries","fields","valueFields","_setRawDefault","_removeAxisRange","axisDataItem","_seriesAxisRanges","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xLowField","_xHighField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","_min","_max","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","_dataGrouped","_groupSeriesData","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","processYSelectionDataItem","processXSelectionDataItem","markDirtySelectionExtremes","_mainContainerMask","mask","_markDirtyKey","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","updateLegendMarker","_afterDataChange","_aggregatesCalculated","_clearDirty","_shouldShowBullet","_positionX","_positionY","id","_dataSets","_markDataSetDirty","_dataSetId","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","_afterChanged","_markDirtyAxes","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","positionToCoordinate","_position","resetExtremes","XYSeries","that","_context","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","closePath","custom","cardinal","interactive","interactiveChildren","Graphics","_addOrientationClass","orientation","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","Container","List","background","Rectangle","axisHeader","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","priority","minZoomFactor","playing","_series","_createAssets","_rangesDirty","_prepareDataItem","above","_index","_updateCursor","delta","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","_handleAxisSelection","onPrivate","markDirtySize","_toggleDataItem","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","Component","Axis","_itemMap","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","f","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateGrid","updateTick","updateFill","updateBullet","cellLocation","_axisLocation","category","axisPositionToIndex","fieldName","seriesDataItem","zoomToIndexes","classNames","concat","startTime","endTime","realDuration","baseDuration","gridInterval","nextGridUnit","format","formats","previousValue","previousIndex","previousUnitValue","selectedItems","changed","skip","date","unitValue","added","pop","shouldAdd","item","dateFormatter","CategoryDateAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","numberFormat","formatter","getNumberFormatter","selectionMin","selectionMax","processDataItem","_formatText","log","LOG10E","pow","stepPower","decCount","valueToPosition","hasTag","removeTag","positionToValue","gridCount","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","axisLocation","fixSmallStep","total","minDefined","maxDefined","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","_syncAxes","valueToFinalPosition","minDiff","diff","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strict","animatePrivate","strictMode","initialMin","initialMax","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","_setBaseInterval","interval","_baseDuration","baseMainDuration","groupInterval","setDataSet","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_groupingCalculated","modifiedDifference","current","_strictMode","_intervalDuration","intervals","_date","close","_updateDates","openValue","closeValue","result","diValue","first","second","value1","zoomToValues","DateAxis","dates","_dates","found","itemValue","findex","_updateAllDates","valueToIndex","GaplessDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","gridTemplate","axisChildren","point1","point2","_ls","_lc","innerWidth","toggleVisibility","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","AxisRendererY","_draw","RoundedRectangle","Candlestick","Template","ColumnSeries","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","getRaw","_updateCandleGraphics","CandlestickSeries","lY","hX","OHLC","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_t","stepAfter","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy"],"mappings":"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","file":"xy.js","sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $type from \"../../core/util/Type\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.plotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\tplotContainer.children.moveValue(zoomOutButton);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\n\t\t// TODO: handle multitouch\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number) {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX && !scrollbarX.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY && !scrollbarY.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this._otherCharts;\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.reverse();\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\textraMin: 0,\r\n\t\t\textraMax: 0,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t})\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t})\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tif (this.get(\"opposite\" as any)) {\n\t\t\tthemeTags.push(\"opposite\");\n\t\t}\n\t\tif (this.get(\"inside\" as any)) {\n\t\t\tthemeTags.push(\"inside\");\n\t\t}\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif ((this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty)) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif(!value._stackDirty){\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tlet priority: \"start\" | \"end\" = \"end\";\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactor / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactor / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tlet sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\tlet eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\t\t\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t\tghostLabel.setPrivate(\"visible\", true);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n//import * as $order from \"../../../core/util/Order\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n\tminFinal?: number;\n\tmaxFinal?: number;\n\tselectionMin?: number;\n\tselectionMax?: number;\n\tselectionMinFinal?: number;\n\tselectionMaxFinal?: number;\n\tselectionStepFinal?: number;\n\tstep?: number;\n\tstepDecimalPlaces?: number;\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = selectionMin;\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet differencePower = Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E;\n\t\t\t\t\tif (differencePower > 1) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(min) * Math.LOG10E + i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tconst extraMin = this.get(\"extraMin\", 0);\n\t\tconst extraMax = this.get(\"extraMax\", 0);\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\n\t\tconst strictMinMax = this.get(\"strictMinMax\", false);\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strict = this.get(\"strictMinMax\");\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (this.get(\"strictMinMax\")) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\tif (!logarithmic) {\n\t\t\t// round down min\n\t\t\tif (strictMode) {\n\t\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.ceil(max / power) * power;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t\t}\n\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\t\t// logarithmic\n\t\telse {\n\t\t\tif (min <= 0) {\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t\tmin = this.get(\"baseValue\", 0);\n\t\t\t}\n\n\t\t\tif (min === Infinity) {\n\t\t\t\tmin = 1;\n\t\t\t}\n\n\t\t\tif (max === -Infinity) {\n\t\t\t\tmax = 10;\n\t\t\t}\n\n\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\n\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\n\n\t\t\tif (this.get(\"strictMinMax\")) {\n\t\t\t\tlet minDefined = this.get(\"min\");\n\t\t\t\tlet maxDefined = this.get(\"max\");\n\t\t\t\tif ($type.isNumber(minDefined) && minDefined > 0) {\n\t\t\t\t\tmin = minDefined;\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined) && maxDefined > 0) {\n\t\t\t\t\tmax = maxDefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\t\tif (!logarithmic) {\n\t\t\t// final min and max\n\t\t\tlet minCount = Math.floor(min / step);\n\n\t\t\tmin = $math.round(step * minCount, decCount);\n\n\t\t\tlet maxCount: number;\n\n\t\t\tif (!strictMode) {\n\t\t\t\tmaxCount = Math.ceil(max / step);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaxCount = Math.floor(max / step);\n\t\t\t}\n\n\t\t\tif (maxCount === minCount) {\n\t\t\t\tmaxCount++;\n\t\t\t}\n\n\t\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\t\tif (max < initialMax) {\n\t\t\t\tmax = max + step;\n\t\t\t}\n\n\t\t\tif (min > initialMin) {\n\t\t\t\tmin = min - step;\n\t\t\t}\n\t\t}\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tif (this.isDirty(\"baseInterval\")) {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t}\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\t$array.eachContinue(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (series._dataSets[dataSetId].length < this.get(\"groupCount\", Infinity)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tconst groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\t\t\tif (groupIntervals) {\n\t\t\t\t\t\tgroupInterval = $time.chooseInterval(0, modifiedDifference, this.get(\"groupCount\", Infinity), groupIntervals);\n\t\t\t\t\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\t\t\t\t\tgroupInterval = { ...baseInterval };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count))) {\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (start.index > 0) {\n\t\t\t\t\t\tstart.index -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tseries.setPrivate(\"startIndex\", start.index);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", end.index);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime()) //$time.round(new Date(value + intervalDuration * 1.1), gridInterval.timeUnit, gridInterval.count).getTime());\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tdataItem.open = {};\n\t\tdataItem.close = {};\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\tdataItem.close![field] = endTime;\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endValue = value;\n\t\tif (location > 0) {\n\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t}\n\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\n\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position) + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * this.baseDuration()), this.get(\"tooltipDateFormat\", format));\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\tindex?: number\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime);\r\n\r\n\t\t\tif (endIndex - startIndex < maxCount) {\r\n\t\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\t\t\t}\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet previousIndex = -Infinity;\r\n\t\t\tlet previousUnitValue = -Infinity;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\t\t\tlet changed = false;\r\n\t\t\t// 0, not a mistake, starting from start index is not good\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\tlet index = i;\r\n\t\t\t\tlet skip = false;\r\n\r\n\t\t\t\tlet value = dates[i];\r\n\t\t\t\tlet date = new Date(value);\r\n\t\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\r\n\r\n\t\t\t\tlet shouldAdd = false;\r\n\t\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\r\n\t\t\t\t\tif (index - previousIndex >= frequency) {\r\n\t\t\t\t\t\tshouldAdd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (unitValue % gridInterval.count === 0) {\r\n\t\t\t\t\t\tif (unitValue != previousUnitValue) {\r\n\t\t\t\t\t\t\tshouldAdd = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (shouldAdd) {\r\n\t\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\r\n\t\t\t\t\t\tif (changed) {\r\n\t\t\t\t\t\t\tskip = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!skip) {\r\n\t\t\t\t\t\tselectedItems.push(i);\r\n\t\t\t\t\t\tpreviousIndex = index;\r\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchanged = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = -Infinity;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\tdurationFormat: string;\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\t\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\t\t\n\t\tconst opposite = \"opposite\"\n\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (chart) {\n\t\t\t\tconst axisChildren = axis.children;\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\taxis.removeTag(opposite);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\t\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\t\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tx0 = Math.max(0, x0);\n\t\t\tx1 = Math.min(w, x1);\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\"\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\taxis.addTag(opposite);\t\t\t\t\t\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(\"opposite\");\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\tthumb.set(\"centerX\", p100);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\t\t\t\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\n\t\tthumb.setPrivate(\"width\", axis.labelsContainer.width());\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ty0 = Math.max(0, y0);\n\t\t\ty1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\tlowX0?: number;\n\tlowY0?: number;\n\tlowX1?: number;\n\tlowY1?: number;\n\n\thighX0?: number;\n\thighY0?: number;\n\thighX1?: number;\n\thighY1?: number;\n\n\torientation?: \"horizontal\" | \"vertical\"\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n\n\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\tcolumns: ListTemplate<Candlestick>\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\tcolumns: ListTemplate<OHLC>\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;"],"sourceRoot":""}